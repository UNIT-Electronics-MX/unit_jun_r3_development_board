name: Deploy mdBook Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'software/**'
      - 'hardware/**'
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/deploy-mdbook.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'software/**'
      - 'hardware/**'
      - 'README.md'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Setup mdBook
      uses: peaceiris/actions-mdbook@v2
      with:
        mdbook-version: '0.4.52'

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Build documentation with new generation script
      run: |
        echo " Starting automated mdBook documentation build..."
        chmod +x software/scripts/generate-docs.sh
        ./software/scripts/generate-docs.sh
        echo " mdBook build completed!"

    - name: Verify build output
      run: |
        echo " Verifying software/book/book/ directory contents..."
        if [ -d "software/book/book" ]; then
          ls -la software/book/book/
          echo " Documentation ready for GitHub Pages!"
          echo " Generated HTML files: $(find software/book/book -name "*.html" | wc -l)"
        else
          echo " Build failed - no output directory found"
          exit 1
        fi

    - name: Upload documentation to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './software/book/book'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
